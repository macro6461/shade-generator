{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcroak/Development/shade-generator/shade-generator/src/components/RGBInput.js\";\nimport React, { useState } from 'react';\nimport { Input } from 'antd';\nimport SubmitButton from './SubmitButton';\nimport './../App.css';\n\nconst RGBInput = props => {\n  const {\n    color,\n    setColor\n  } = props;\n  const [red, setRed] = useState(null);\n  const [green, setGreen] = useState(null);\n  const [blue, setBlue] = useState(null);\n  const [finalColor, setFinalColor] = useState(null);\n  const funcs = {\n    red: setRed,\n    green: setGreen,\n    blue: setBlue\n  };\n  const keys = ['red', 'green', 'blue'];\n\n  const addComma = text => {\n    let chunks = [];\n\n    for (let i = 0; i < text.length; i += 3) {\n      chunks.push(text.substr(i, 3));\n    }\n\n    return chunks.join();\n  };\n\n  const onChange = (e, key) => {\n    var str = e.target.value;\n    var firstCheck = str.match(/rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/);\n\n    if (firstCheck) {\n      setRed(firstCheck[1]);\n      setGreen(firstCheck[2]);\n      setBlue(firstCheck[3]);\n    } else {\n      debugger;\n      str = str.replace(/\\W|_|[a-zA-Z]/g, \"\");\n\n      if (str.length > 3) {\n        var arr = str.match(/.{1,3}/g);\n\n        for (var i = 0; i < arr.length; ++i) {\n          var myFunc = funcs[keys[i]];\n          myFunc(arr[i]);\n        }\n      } else {\n        var myFunc = funcs[key];\n        myFunc(str);\n      }\n    }\n  };\n\n  const submitColor = () => {\n    console.log(finalColor);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"RGB(\", /*#__PURE__*/React.createElement(Input, {\n    maxLength: 3,\n    className: \"rgbInput\",\n    value: red,\n    style: {\n      width: 50\n    },\n    onChange: e => onChange(e, 'red'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 3,\n    className: \"rgbInput\",\n    value: green,\n    style: {\n      width: 50\n    },\n    onChange: e => onChange(e, 'green'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    maxLength: 3,\n    className: \"rgbInput\",\n    value: blue,\n    style: {\n      width: 50,\n      marginRight: 10\n    },\n    onChange: e => onChange(e, 'blue'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), \" )\", /*#__PURE__*/React.createElement(SubmitButton, {\n    color: finalColor,\n    onClick: submitColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default RGBInput;","map":{"version":3,"sources":["/Users/matthewcroak/Development/shade-generator/shade-generator/src/components/RGBInput.js"],"names":["React","useState","Input","SubmitButton","RGBInput","props","color","setColor","red","setRed","green","setGreen","blue","setBlue","finalColor","setFinalColor","funcs","keys","addComma","text","chunks","i","length","push","substr","join","onChange","e","key","str","target","value","firstCheck","match","replace","arr","myFunc","submitColor","console","log","width","marginRight"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Input} from 'antd';\nimport SubmitButton from './SubmitButton';\nimport './../App.css'\n\nconst RGBInput = (props) =>{\n\n    const {color, setColor} = props;\n\n    const [red, setRed] = useState(null)\n    const [green, setGreen] = useState(null)\n    const [blue, setBlue] = useState(null)\n    const [finalColor, setFinalColor] = useState(null)\n\n    const funcs = {red: setRed, green: setGreen, blue: setBlue}\n    const keys = ['red', 'green', 'blue']\n\n    const addComma = (text) =>{\n        let chunks = [];\n        for(let i = 0; i < text.length; i+=3){\n          chunks.push(text.substr(i,3));\n        }\n        return chunks.join();\n    }\n\n    const onChange = (e, key) => {\n        var str = e.target.value\n        var firstCheck = str.match(/rgb\\((\\d{1,3}), (\\d{1,3}), (\\d{1,3})\\)/)\n        if (firstCheck){\n            setRed(firstCheck[1])\n            setGreen(firstCheck[2])\n            setBlue(firstCheck[3])\n        } else {\n            debugger\n            str = str.replace(/\\W|_|[a-zA-Z]/g, \"\")\n            if (str.length > 3){\n                var arr = str.match(/.{1,3}/g);\n                for (var i = 0; i < arr.length; ++i){\n                    var myFunc = funcs[keys[i]]\n                    myFunc(arr[i])\n                }\n            } else {\n                var myFunc = funcs[key]\n                myFunc(str)\n            }\n        }\n    }\n\n    const submitColor = () =>{\n        console.log(finalColor)\n    };\n\n    return (\n        <>\n            RGB(\n                <Input maxLength={3} className='rgbInput' value={red} style={{width: 50}} onChange={(e)=>onChange(e, 'red')}/>\n                <Input maxLength={3} className='rgbInput' value={green} style={{width: 50}} onChange={(e)=>onChange(e, 'green')}/>\n                <Input maxLength={3} className='rgbInput' value={blue} style={{width: 50, marginRight: 10}} onChange={(e)=>onChange(e, 'blue')}/> )\n\n                <SubmitButton color={finalColor} onClick={submitColor}/>\n        </>\n    )\n\n};\n\nexport default RGBInput;"]},"metadata":{},"sourceType":"module"}