{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcroak/Development/shade-generator/shade-generator/src/components/RGBInput.js\";\nimport React, { useState } from 'react';\nimport { InputNumber } from 'antd';\nimport SubmitButton from './SubmitButton';\nimport './../App.css';\n\nconst RGBInput = props => {\n  const {\n    color,\n    setColor\n  } = props;\n  const [red, setRed] = useState(null);\n  const [green, setGreen] = useState(null);\n  const [blue, setBlue] = useState(null);\n  const [finalColor, setFinalColor] = useState(null);\n  const funcs = {\n    red: setRed,\n    green: setGreen,\n    blue: setBlue\n  };\n  const keys = ['red', 'green', 'blue'];\n\n  const addComma = text => {\n    let chunks = [];\n\n    for (let i = 0; i < text.length; i += 3) {\n      chunks.push(text.substr(i, 3));\n    }\n\n    return chunks.join();\n  };\n\n  const onChange = (e, key) => {\n    var myFunc;\n\n    if (e) {\n      var str = e ? e.toString().replace(/\\W|_|[a-zA-Z]/g, \"\") : null;\n      var l = str.length;\n      var index = keys.indexOf(key);\n\n      if (l <= 3) {\n        myFunc = funcs[key];\n      } else {\n        if (index === l) {\n          str = str.substr(str);\n        }\n      }\n\n      myFunc(str);\n    } else {\n      myFunc(null);\n    }\n  };\n\n  const submitColor = () => {\n    console.log(finalColor);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"RGB(\", /*#__PURE__*/React.createElement(InputNumber, {\n    className: \"rgbInput\",\n    value: red,\n    style: {\n      width: 50\n    },\n    onChange: e => onChange(e, 'red'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    className: \"rgbInput\",\n    value: green,\n    style: {\n      width: 50\n    },\n    onChange: e => onChange(e, 'green'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    className: \"rgbInput\",\n    value: blue,\n    style: {\n      width: 50,\n      marginRight: 10\n    },\n    onChange: e => onChange(e, 'blue'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), \" )\", /*#__PURE__*/React.createElement(SubmitButton, {\n    color: finalColor,\n    onClick: submitColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }));\n};\n\nexport default RGBInput;","map":{"version":3,"sources":["/Users/matthewcroak/Development/shade-generator/shade-generator/src/components/RGBInput.js"],"names":["React","useState","InputNumber","SubmitButton","RGBInput","props","color","setColor","red","setRed","green","setGreen","blue","setBlue","finalColor","setFinalColor","funcs","keys","addComma","text","chunks","i","length","push","substr","join","onChange","e","key","myFunc","str","toString","replace","l","index","indexOf","submitColor","console","log","width","marginRight"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {InputNumber} from 'antd';\nimport SubmitButton from './SubmitButton';\nimport './../App.css'\n\nconst RGBInput = (props) =>{\n\n    const {color, setColor} = props;\n\n    const [red, setRed] = useState(null)\n    const [green, setGreen] = useState(null)\n    const [blue, setBlue] = useState(null)\n    const [finalColor, setFinalColor] = useState(null)\n\n    const funcs = {red: setRed, green: setGreen, blue: setBlue}\n    const keys = ['red', 'green', 'blue']\n\n    const addComma = (text) =>{\n        let chunks = [];\n        for(let i = 0; i < text.length; i+=3){\n          chunks.push(text.substr(i,3));\n        }\n        return chunks.join();\n    }\n\n    const onChange = (e, key) =>{\n        var myFunc;\n        if (e){\n            var str = e ? e.toString().replace(/\\W|_|[a-zA-Z]/g, \"\") : null\n            var l = str.length\n            var index = keys.indexOf(key)\n    \n            if (l <= 3){\n                myFunc = funcs[key]\n            } else {\n                if (index === l){\n                   str = str.substr(str)\n                }\n            }\n            myFunc(str)\n        } else {\n            myFunc(null)\n        }\n    }\n\n    const submitColor = () =>{\n        console.log(finalColor)\n    };\n\n    return (\n        <>\n            RGB(\n                <InputNumber className='rgbInput' value={red} style={{width: 50}} onChange={(e)=>onChange(e, 'red')}/>\n                <InputNumber className='rgbInput' value={green} style={{width: 50}} onChange={(e)=>onChange(e, 'green')}/>\n                <InputNumber className='rgbInput' value={blue} style={{width: 50, marginRight: 10}} onChange={(e)=>onChange(e, 'blue')}/> )\n\n                <SubmitButton color={finalColor} onClick={submitColor}/>\n        </>\n    )\n\n};\n\nexport default RGBInput;"]},"metadata":{},"sourceType":"module"}