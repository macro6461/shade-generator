{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcroak/Development/shade-generator/shade-generator/src/components/RGBInput.js\";\nimport React from 'react';\nimport { Input } from 'antd';\n\nconst RGBInput = props => {\n  const commafy = num => {\n    var str = num.toString().match(/\\d{1,3}(?=(\\d{3})*$)/g);\n\n    if (str[0].length >= 5) {\n      str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\n    }\n\n    if (str[1] && str[1].length >= 5) {\n      str[1] = str[1].replace(/(\\d{3})/g, '$1 ');\n    }\n\n    return str.join('.');\n  };\n\n  const onChange = e => {\n    var myColor = e.target.value.replace(/\\W|_|[a-zA-Z]/g, \"\");\n    myColor = commafy(parseInt(myColor));\n    debugger;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: 200\n    },\n    prefix: \"rgb(\",\n    onChange: onChange,\n    suffix: \")\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default RGBInput;","map":{"version":3,"sources":["/Users/matthewcroak/Development/shade-generator/shade-generator/src/components/RGBInput.js"],"names":["React","Input","RGBInput","props","commafy","num","str","toString","match","length","replace","join","onChange","e","myColor","target","value","parseInt","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,MAApB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AAEvB,QAAMC,OAAO,GAAKC,GAAF,IAAW;AACvB,QAAIC,GAAG,GAAGD,GAAG,CAACE,QAAJ,GAAeC,KAAf,CAAqB,uBAArB,CAAV;;AACA,QAAIF,GAAG,CAAC,CAAD,CAAH,CAAOG,MAAP,IAAiB,CAArB,EAAwB;AACpBH,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOI,OAAP,CAAe,oBAAf,EAAqC,KAArC,CAAT;AACH;;AACD,QAAIJ,GAAG,CAAC,CAAD,CAAH,IAAUA,GAAG,CAAC,CAAD,CAAH,CAAOG,MAAP,IAAiB,CAA/B,EAAkC;AAC9BH,MAAAA,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAH,CAAOI,OAAP,CAAe,UAAf,EAA2B,KAA3B,CAAT;AACH;;AACD,WAAOJ,GAAG,CAACK,IAAJ,CAAS,GAAT,CAAP;AACH,GATD;;AAWA,QAAMC,QAAQ,GAAIC,CAAD,IAAM;AACnB,QAAIC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeN,OAAf,CAAuB,gBAAvB,EAAyC,EAAzC,CAAd;AACAI,IAAAA,OAAO,GAAGV,OAAO,CAACa,QAAQ,CAACH,OAAD,CAAT,CAAjB;AACA;AACH,GAJD;;AAMA,sBACI,uDACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAK,EAAE;AAAR,KAAd;AAA4B,IAAA,MAAM,EAAC,MAAnC;AAA0C,IAAA,QAAQ,EAAEN,QAApD;AAA8D,IAAA,MAAM,EAAC,GAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CAzBD;;AA2BA,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport {Input} from 'antd';\n\nconst RGBInput = (props) =>{\n\n    const commafy = ( num ) => {\n        var str = num.toString().match(/\\d{1,3}(?=(\\d{3})*$)/g);\n        if (str[0].length >= 5) {\n            str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\n        }\n        if (str[1] && str[1].length >= 5) {\n            str[1] = str[1].replace(/(\\d{3})/g, '$1 ');\n        }\n        return str.join('.');\n    }\n\n    const onChange = (e) =>{\n        var myColor = e.target.value.replace(/\\W|_|[a-zA-Z]/g, \"\")\n        myColor = commafy(parseInt(myColor))\n        debugger\n    }\n\n    return (\n        <>\n            <Input style={{width: 200}} prefix=\"rgb(\" onChange={onChange} suffix=\")\"/>\n        </>\n    )\n\n};\n\nexport default RGBInput;"]},"metadata":{},"sourceType":"module"}