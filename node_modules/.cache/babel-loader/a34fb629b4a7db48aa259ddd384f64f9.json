{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcroak/Development/shade-generator/shade-generator/src/components/RGBInput.js\";\nimport React, { useState } from 'react';\nimport { InputNumber } from 'antd';\nimport './../App.css';\n\nconst RGBInput = props => {\n  const {\n    color,\n    setColor\n  } = props;\n  const [rgbColor, setRGBColor] = useState({\n    r: null,\n    g: null,\n    b: null\n  });\n\n  const addComma = text => {\n    let chunks = [];\n\n    for (let i = 0; i < text.length; i += 3) {\n      chunks.push(text.substr(i, 3));\n    }\n\n    return chunks.join();\n  };\n\n  const onChange = (e, key) => {\n    var myRGB = rgbColor;\n    myRGB[key] = e.toString().replace(/\\W|_|[a-zA-Z]/g, \"\");\n    setRGBColor(myRGB);\n    console.log(rgbColor); // var myColor = e.target.value.replace(/\\W|_|[a-zA-Z]/g, \"\")\n    // myColor = addComma(myColor)\n    // setColor(myColor)\n  };\n\n  const {\n    r,\n    g,\n    b\n  } = rgbColor;\n  console.log(r);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"RGB(\", /*#__PURE__*/React.createElement(InputNumber, {\n    className: \"rgbInput\",\n    value: r,\n    style: {\n      width: 50\n    },\n    onChange: e => onChange(e, 'r'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    className: \"rgbInput\",\n    value: g,\n    style: {\n      width: 50\n    },\n    onChange: e => onChange(e, 'g'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(InputNumber, {\n    className: \"rgbInput\",\n    value: b,\n    style: {\n      width: 50,\n      marginRight: 10\n    },\n    onChange: e => onChange(e, 'b'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), \" )\");\n};\n\nexport default RGBInput;","map":{"version":3,"sources":["/Users/matthewcroak/Development/shade-generator/shade-generator/src/components/RGBInput.js"],"names":["React","useState","InputNumber","RGBInput","props","color","setColor","rgbColor","setRGBColor","r","g","b","addComma","text","chunks","i","length","push","substr","join","onChange","e","key","myRGB","toString","replace","console","log","width","marginRight"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,QAA0B,MAA1B;AACA,OAAO,cAAP;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAU;AAEvB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBF,KAA1B;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AAACQ,IAAAA,CAAC,EAAE,IAAJ;AAAUC,IAAAA,CAAC,EAAE,IAAb;AAAmBC,IAAAA,CAAC,EAAE;AAAtB,GAAD,CAAxC;;AAEA,QAAMC,QAAQ,GAAIC,IAAD,IAAS;AACtB,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAI,CAACG,MAAxB,EAAgCD,CAAC,IAAE,CAAnC,EAAqC;AACnCD,MAAAA,MAAM,CAACG,IAAP,CAAYJ,IAAI,CAACK,MAAL,CAAYH,CAAZ,EAAc,CAAd,CAAZ;AACD;;AACD,WAAOD,MAAM,CAACK,IAAP,EAAP;AACA,GANJ;;AAQA,QAAMC,QAAQ,GAAG,CAACC,CAAD,EAAIC,GAAJ,KAAW;AACxB,QAAIC,KAAK,GAAGhB,QAAZ;AACAgB,IAAAA,KAAK,CAACD,GAAD,CAAL,GAAaD,CAAC,CAACG,QAAF,GAAaC,OAAb,CAAqB,gBAArB,EAAuC,EAAvC,CAAb;AACAjB,IAAAA,WAAW,CAACe,KAAD,CAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYpB,QAAZ,EAJwB,CAKxB;AACA;AACA;AACH,GARD;;AAUA,QAAM;AAACE,IAAAA,CAAD;AAAIC,IAAAA,CAAJ;AAAOC,IAAAA;AAAP,MAAYJ,QAAlB;AAEAmB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,CAAZ;AAEA,sBACI,+DAEQ,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAkC,IAAA,KAAK,EAAEA,CAAzC;AAA4C,IAAA,KAAK,EAAE;AAACmB,MAAAA,KAAK,EAAE;AAAR,KAAnD;AAAgE,IAAA,QAAQ,EAAGP,CAAD,IAAKD,QAAQ,CAACC,CAAD,EAAI,GAAJ,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,eAGQ,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAkC,IAAA,KAAK,EAAEX,CAAzC;AAA4C,IAAA,KAAK,EAAE;AAACkB,MAAAA,KAAK,EAAE;AAAR,KAAnD;AAAgE,IAAA,QAAQ,EAAGP,CAAD,IAAKD,QAAQ,CAACC,CAAD,EAAI,GAAJ,CAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,eAIQ,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAkC,IAAA,KAAK,EAAEV,CAAzC;AAA4C,IAAA,KAAK,EAAE;AAACiB,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,WAAW,EAAE;AAAzB,KAAnD;AAAiF,IAAA,QAAQ,EAAGR,CAAD,IAAKD,QAAQ,CAACC,CAAD,EAAI,GAAJ,CAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,OADJ;AASH,CArCD;;AAuCA,eAAelB,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport {InputNumber} from 'antd';\nimport './../App.css'\n\nconst RGBInput = (props) =>{\n\n    const {color, setColor} = props;\n\n    const [rgbColor, setRGBColor] = useState({r: null, g: null, b: null})\n\n    const addComma = (text) =>{\n        let chunks = [];\n        for(let i = 0; i < text.length; i+=3){\n          chunks.push(text.substr(i,3));\n        }\n        return chunks.join();\n       }\n\n    const onChange = (e, key) =>{\n        var myRGB = rgbColor\n        myRGB[key] = e.toString().replace(/\\W|_|[a-zA-Z]/g, \"\")\n        setRGBColor(myRGB)\n        console.log(rgbColor)\n        // var myColor = e.target.value.replace(/\\W|_|[a-zA-Z]/g, \"\")\n        // myColor = addComma(myColor)\n        // setColor(myColor)\n    }\n\n    const {r, g, b} = rgbColor\n\n    console.log(r)\n\n    return (\n        <>\n            RGB(\n                <InputNumber className='rgbInput' value={r} style={{width: 50}} onChange={(e)=>onChange(e, 'r')}/>\n                <InputNumber className='rgbInput' value={g} style={{width: 50}} onChange={(e)=>onChange(e, 'g')}/>\n                <InputNumber className='rgbInput' value={b} style={{width: 50, marginRight: 10}} onChange={(e)=>onChange(e, 'b')}/> )\n        </>\n    )\n\n};\n\nexport default RGBInput;"]},"metadata":{},"sourceType":"module"}