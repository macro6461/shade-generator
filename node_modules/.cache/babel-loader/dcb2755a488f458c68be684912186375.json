{"ast":null,"code":"var _jsxFileName = \"/Users/matthewcroak/Development/shade-generator/shade-generator/src/App.js\";\nimport React, { useState } from \"react\";\nimport Buttons from \"./components/Buttons.js\";\nimport { Input, Button } from \"antd\";\nimport { PlusCircleOutlined, Tooltip } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\nexport default function App() {\n  const [color, setColor] = useState(null);\n  const [colors, setColors] = useState([]);\n\n  const genColor = e => {\n    var myColor = e.target.value.replace(/#/g, \"\");\n    setColor(myColor);\n  };\n\n  const addColor = () => {\n    var arr = colors;\n    var myColor = \"#\" + color;\n\n    if (isColor(myColor)) {\n      arr.push(myColor);\n      setColors(arr);\n    } else {\n      alert(\"Invalid color. Please check your spelling.\");\n    }\n\n    setColor(null);\n  };\n\n  const isColor = () => {\n    var s = new Option().style;\n    s.color = \"#\" + color;\n    return s.color.length > 1;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Shade Generator\"), /*#__PURE__*/React.createElement(Input, {\n    prefix: \"#\",\n    onChange: genColor,\n    placeholder: \"Enter Hex Code\",\n    value: color,\n    style: {\n      width: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"add color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginLeft: 10\n    },\n    type: \"primary\",\n    disabled: !color,\n    onClick: addColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlusCircleOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Buttons, {\n    colors: colors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/matthewcroak/Development/shade-generator/shade-generator/src/App.js"],"names":["React","useState","Buttons","Input","Button","PlusCircleOutlined","Tooltip","App","color","setColor","colors","setColors","genColor","e","myColor","target","value","replace","addColor","arr","isColor","push","alert","s","Option","style","length","width","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AACA,SAASC,kBAAT,EAA6BC,OAA7B,QAA4C,mBAA5C;AACA,OAAO,oBAAP;AACA,OAAO,cAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,QAAQ,GAAGC,CAAC,IAAI;AACpB,QAAIC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,IAAvB,EAA6B,EAA7B,CAAd;AACAR,IAAAA,QAAQ,CAACK,OAAD,CAAR;AACD,GAHD;;AAKA,QAAMI,QAAQ,GAAG,MAAM;AACrB,QAAIC,GAAG,GAAGT,MAAV;AACA,QAAII,OAAO,GAAG,MAAMN,KAApB;;AACA,QAAIY,OAAO,CAACN,OAAD,CAAX,EAAsB;AACpBK,MAAAA,GAAG,CAACE,IAAJ,CAASP,OAAT;AACAH,MAAAA,SAAS,CAACQ,GAAD,CAAT;AACD,KAHD,MAGO;AACLG,MAAAA,KAAK,CAAC,4CAAD,CAAL;AACD;;AACDb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAVD;;AAYA,QAAMW,OAAO,GAAG,MAAM;AACpB,QAAIG,CAAC,GAAG,IAAIC,MAAJ,GAAaC,KAArB;AACAF,IAAAA,CAAC,CAACf,KAAF,GAAU,MAAMA,KAAhB;AACA,WAAOe,CAAC,CAACf,KAAF,CAAQkB,MAAR,GAAiB,CAAxB;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAC,GADT;AAEE,IAAA,QAAQ,EAAEd,QAFZ;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,KAAK,EAAEJ,KAJT;AAKE,IAAA,KAAK,EAAE;AAAEmB,MAAAA,KAAK,EAAE;AAAT,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KADT;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,QAAQ,EAAE,CAACpB,KAHb;AAIE,IAAA,OAAO,EAAEU,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CATF,eAoBE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAER,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AAwBD","sourcesContent":["import React, { useState } from \"react\";\nimport Buttons from \"./components/Buttons.js\";\nimport { Input, Button } from \"antd\";\nimport { PlusCircleOutlined, Tooltip } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [color, setColor] = useState(null);\n  const [colors, setColors] = useState([]);\n\n  const genColor = e => {\n    var myColor = e.target.value.replace(/#/g, \"\");\n    setColor(myColor);\n  };\n\n  const addColor = () => {\n    var arr = colors;\n    var myColor = \"#\" + color;\n    if (isColor(myColor)) {\n      arr.push(myColor);\n      setColors(arr);\n    } else {\n      alert(\"Invalid color. Please check your spelling.\");\n    }\n    setColor(null);\n  };\n\n  const isColor = () => {\n    var s = new Option().style;\n    s.color = \"#\" + color;\n    return s.color.length > 1;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Shade Generator</h1>\n      <Input\n        prefix=\"#\"\n        onChange={genColor}\n        placeholder=\"Enter Hex Code\"\n        value={color}\n        style={{ width: 200 }}\n      />\n      <Tooltip title=\"add color\">\n        {\" \"}\n        <Button\n          style={{ marginLeft: 10 }}\n          type=\"primary\"\n          disabled={!color}\n          onClick={addColor}\n        >\n          <PlusCircleOutlined />\n        </Button>\n      </Tooltip>\n      <Buttons colors={colors} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}